{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "895eb98d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>trigger</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34</td>\n",
       "      <td>3/2/07</td>\n",
       "      <td>38.6009</td>\n",
       "      <td>-77.2682</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>42</td>\n",
       "      <td>3/22/07</td>\n",
       "      <td>40.5175</td>\n",
       "      <td>-81.4305</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>56</td>\n",
       "      <td>4/6/07</td>\n",
       "      <td>40.4377</td>\n",
       "      <td>-79.9160</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59</td>\n",
       "      <td>4/14/07</td>\n",
       "      <td>45.3226</td>\n",
       "      <td>-73.7771</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>61</td>\n",
       "      <td>4/15/07</td>\n",
       "      <td>37.4325</td>\n",
       "      <td>-82.4931</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id     date  latitude  longitude   trigger\n",
       "0  34   3/2/07   38.6009   -77.2682      Rain\n",
       "1  42  3/22/07   40.5175   -81.4305      Rain\n",
       "2  56   4/6/07   40.4377   -79.9160      Rain\n",
       "3  59  4/14/07   45.3226   -73.7771      Rain\n",
       "4  61  4/15/07   37.4325   -82.4931  Downpour"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Import the Dataset and Library\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "Landslide = pd.read_csv(r'C:\\Users\\User-pc\\Desktop\\LANDSLIDE.csv')\n",
    "Landslide.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5a54cb72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             int64\n",
       "date          object\n",
       "latitude     float64\n",
       "longitude    float64\n",
       "trigger       object\n",
       "dtype: object"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## lets see the data type of each column in Dataset\n",
    "Landslide.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "34cbee6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id           0\n",
       "date         3\n",
       "latitude     1\n",
       "longitude    1\n",
       "trigger      2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Lets see the null values or missing values in each column\n",
    "Landslide.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6ea5239d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9/12/13    21\n",
       "5/3/10     21\n",
       "9/27/15    17\n",
       "6/23/14    15\n",
       "3/4/15     14\n",
       "           ..\n",
       "4/23/15     1\n",
       "5/10/15     1\n",
       "7/19/13     1\n",
       "7/31/14     1\n",
       "3/7/15      1\n",
       "Name: date, Length: 922, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['date'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0efb029a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'5/3/10'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['date'].mode()[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b0e9f70b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       " 43.0266    4\n",
       " 2.7664     2\n",
       " 40.0505    2\n",
       " 37.3350    2\n",
       " 10.8275    2\n",
       "           ..\n",
       " 43.3650    1\n",
       " 40.1504    1\n",
       "-7.9589     1\n",
       " 19.5167    1\n",
       " 32.5196    1\n",
       "Name: latitude, Length: 1665, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['latitude'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0d0cde5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "43.0266"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['latitude'].mode()[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b26008c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-76.3302     4\n",
       "-82.7938     2\n",
       "-81.9420     2\n",
       "-82.4931     2\n",
       "-90.5316     2\n",
       "            ..\n",
       "-87.1607     1\n",
       "-90.9681     1\n",
       "-82.5560     1\n",
       "-111.8657    1\n",
       "-61.3470     1\n",
       "Name: longitude, Length: 1665, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['longitude'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9741a3dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "43.0266"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['latitude'].mode()[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "80a06026",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Downpour                   866\n",
       "Rain                       446\n",
       "Tropical cyclone           131\n",
       "Continuous rain             95\n",
       "Unknown                     88\n",
       "unknown                     12\n",
       "Snowfall snowmelt           11\n",
       "Flooding                    10\n",
       "Earthquake                   8\n",
       "Mining digging               7\n",
       "Freeze thaw                  6\n",
       "Construction                 5\n",
       "Other                        3\n",
       "Volcano                      1\n",
       "downpour                     1\n",
       "Dam embankment collapse      1\n",
       "Name: trigger, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['trigger'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4668c946",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Downpour'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide['trigger'].mode()[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0efeac98",
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_col = ['date','latitude','longitude','trigger']\n",
    "for i in cat_col:\n",
    "    Landslide[i].fillna(Landslide[i].mode()[0],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a01018d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id           0\n",
       "date         0\n",
       "latitude     0\n",
       "longitude    0\n",
       "trigger      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Landslide.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8097e47d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id              int64\n",
       "date           object\n",
       "latitude      float64\n",
       "longitude     float64\n",
       "trigger      category\n",
       "dtype: object"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# As the target variable (Trigger ) is not a categorical variable, we need first convert this into categorical type\n",
    "\n",
    "Landslide['trigger'] = Landslide['trigger'].astype('category')\n",
    "\n",
    "# lets check again the data types\n",
    "\n",
    "Landslide.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a818c41e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>trigger</th>\n",
       "      <th>date_1/10/10</th>\n",
       "      <th>date_1/11/11</th>\n",
       "      <th>date_1/11/12</th>\n",
       "      <th>date_1/13/13</th>\n",
       "      <th>date_1/14/13</th>\n",
       "      <th>date_1/14/14</th>\n",
       "      <th>date_1/15/13</th>\n",
       "      <th>date_1/15/14</th>\n",
       "      <th>...</th>\n",
       "      <th>longitude_-60.5841</th>\n",
       "      <th>longitude_-60.575</th>\n",
       "      <th>longitude_-60.566</th>\n",
       "      <th>longitude_-60.55</th>\n",
       "      <th>longitude_-60.5417</th>\n",
       "      <th>longitude_-59.54</th>\n",
       "      <th>longitude_-52.2093</th>\n",
       "      <th>longitude_-51.1818</th>\n",
       "      <th>longitude_-48.8907</th>\n",
       "      <th>longitude_-45.601</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34</td>\n",
       "      <td>Rain</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>42</td>\n",
       "      <td>Rain</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>56</td>\n",
       "      <td>Rain</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59</td>\n",
       "      <td>Rain</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>61</td>\n",
       "      <td>Downpour</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 4251 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id   trigger  date_1/10/10  date_1/11/11  date_1/11/12  date_1/13/13  \\\n",
       "0  34      Rain             0             0             0             0   \n",
       "1  42      Rain             0             0             0             0   \n",
       "2  56      Rain             0             0             0             0   \n",
       "3  59      Rain             0             0             0             0   \n",
       "4  61  Downpour             0             0             0             0   \n",
       "\n",
       "   date_1/14/13  date_1/14/14  date_1/15/13  date_1/15/14  ...  \\\n",
       "0             0             0             0             0  ...   \n",
       "1             0             0             0             0  ...   \n",
       "2             0             0             0             0  ...   \n",
       "3             0             0             0             0  ...   \n",
       "4             0             0             0             0  ...   \n",
       "\n",
       "   longitude_-60.5841  longitude_-60.575  longitude_-60.566  longitude_-60.55  \\\n",
       "0                   0                  0                  0                 0   \n",
       "1                   0                  0                  0                 0   \n",
       "2                   0                  0                  0                 0   \n",
       "3                   0                  0                  0                 0   \n",
       "4                   0                  0                  0                 0   \n",
       "\n",
       "   longitude_-60.5417  longitude_-59.54  longitude_-52.2093  \\\n",
       "0                   0                 0                   0   \n",
       "1                   0                 0                   0   \n",
       "2                   0                 0                   0   \n",
       "3                   0                 0                   0   \n",
       "4                   0                 0                   0   \n",
       "\n",
       "   longitude_-51.1818  longitude_-48.8907  longitude_-45.601  \n",
       "0                   0                   0                  0  \n",
       "1                   0                   0                  0  \n",
       "2                   0                   0                  0  \n",
       "3                   0                   0                  0  \n",
       "4                   0                   0                  0  \n",
       "\n",
       "[5 rows x 4251 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Lets create the dummy variables for all the categorical columns\n",
    "cat_col = ['date','latitude','longitude']\n",
    "Landslide_final = pd.get_dummies(Landslide,columns=cat_col,drop_first=True)\n",
    "Landslide_final.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9cc1afad",
   "metadata": {},
   "outputs": [],
   "source": [
    "Y = Landslide_final[['trigger']]\n",
    "X = Landslide_final.drop(columns=['trigger'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0e5762bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a931b209",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,train_size=0.8,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3cc6e532",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1354, 339, 1354, 339)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(X_train),len(X_test),len(Y_train),len(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3ac7919f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5476c1c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "rf = RandomForestClassifier(n_estimators=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "24078beb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-27-e41018c84360>:1: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  model = rf.fit(X_train,Y_train)\n"
     ]
    }
   ],
   "source": [
    "model = rf.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "e2f7d673",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trigger</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>Continuous rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1685</th>\n",
       "      <td>Unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1556</th>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1176</th>\n",
       "      <td>Unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1374</th>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>543</th>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1111</th>\n",
       "      <td>Earthquake</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1175</th>\n",
       "      <td>Unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Flooding</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>339 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              trigger\n",
       "1263  Continuous rain\n",
       "1685          Unknown\n",
       "1556             Rain\n",
       "1176          Unknown\n",
       "1374             Rain\n",
       "...               ...\n",
       "543          Downpour\n",
       "1111       Earthquake\n",
       "987          Downpour\n",
       "1175          Unknown\n",
       "1483         Flooding\n",
       "\n",
       "[339 rows x 1 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "16b55e7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_test['Prediction'] = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ad3d83e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trigger</th>\n",
       "      <th>Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>Continuous rain</td>\n",
       "      <td>Continuous rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1685</th>\n",
       "      <td>Unknown</td>\n",
       "      <td>Unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1556</th>\n",
       "      <td>Rain</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1176</th>\n",
       "      <td>Unknown</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1374</th>\n",
       "      <td>Rain</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>543</th>\n",
       "      <td>Downpour</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1111</th>\n",
       "      <td>Earthquake</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>Downpour</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1175</th>\n",
       "      <td>Unknown</td>\n",
       "      <td>Downpour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Flooding</td>\n",
       "      <td>Rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>339 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              trigger       Prediction\n",
       "1263  Continuous rain  Continuous rain\n",
       "1685          Unknown          Unknown\n",
       "1556             Rain         Downpour\n",
       "1176          Unknown         Downpour\n",
       "1374             Rain             Rain\n",
       "...               ...              ...\n",
       "543          Downpour         Downpour\n",
       "1111       Earthquake         Downpour\n",
       "987          Downpour         Downpour\n",
       "1175          Unknown         Downpour\n",
       "1483         Flooding             Rain\n",
       "\n",
       "[339 rows x 2 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "55c9c17f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   precision    recall  f1-score   support\n",
      "\n",
      "     Construction       0.00      0.00      0.00         2\n",
      "  Continuous rain       0.89      0.44      0.59        18\n",
      "         Downpour       0.66      0.91      0.77       164\n",
      "       Earthquake       0.00      0.00      0.00         1\n",
      "         Flooding       0.00      0.00      0.00         4\n",
      "      Freeze thaw       0.00      0.00      0.00         2\n",
      "            Other       0.00      0.00      0.00         1\n",
      "             Rain       0.56      0.54      0.55        93\n",
      "Snowfall snowmelt       0.00      0.00      0.00         1\n",
      " Tropical cyclone       1.00      0.28      0.43        29\n",
      "          Unknown       0.33      0.05      0.08        21\n",
      "          unknown       0.00      0.00      0.00         3\n",
      "\n",
      "         accuracy                           0.64       339\n",
      "        macro avg       0.29      0.19      0.20       339\n",
      "     weighted avg       0.62      0.64      0.59       339\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\User-pc\\anaconda3\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "C:\\Users\\User-pc\\anaconda3\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "C:\\Users\\User-pc\\anaconda3\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "## We can print the classification report\n",
    "\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "\n",
    "print(classification_report(Y_test['trigger'], Y_test['Prediction']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2825c0db",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
